# Script d'initialisation pour l'utilisateur niveau27

import os
import base64
import gzip
import CTF_lib
import niveau24

def main():
    NIVEAU = 23
    SUIVANT = 24

    mdp_suivant = CTF_lib.get_mdp_hash(SUIVANT)
    dossier = f"/home/niveau{NIVEAU}"
    chemin_final = os.path.join(dossier, "donnees.mystere")

    # √âtape 1 : √©crire le mot de passe dans un fichier .gz
    gzip_path = "/tmp/temp.gz"
    with gzip.open(gzip_path, "wb") as f:
        f.write(mdp_suivant.encode())

    # √âtape 2 : encoder en base64
    with open(gzip_path, "rb") as f:
        contenu_binaire = f.read()
    encodage = base64.b64encode(contenu_binaire)

    # √âtape 3 : √©crire le fichier final
    with open(chemin_final, "wb") as f:
        f.write(encodage)

    os.system(f"chown niveau{NIVEAU}:niveau{NIVEAU} {chemin_final}")
    os.system(f"chmod 640 {chemin_final}")

    # Nettoyage
    os.remove(gzip_path)

    # Fichier readme
    contenu_readme = f"""
Bienvenue dans le niveau {NIVEAU} du CTF hackathon.

Objectif:
Le mot de passe est l√†, cach√©‚Ä¶ mais pas accessible imm√©diatement.\
Il est enfoui sous deux couches : une premi√®re d‚Äôencodage, puis une compression classique.\
√Ä toi de d√©m√™ler les protections, pour extraire le mot brut, celui qui t‚Äôouvrira la porte du niveau suivant.

Pour t'aider :
Tu disposes d‚Äôun fichier nomm√© donnees.mystere.\
Il ne contient pas directement le mot de passe, mais une version encod√©e en base64, puis compress√©e via un algorithme bien connu.\
Ta mission est simple : d√©coder, d√©compresser, r√©v√©ler.

‚ÑπÔ∏è :
Commence par d√©coder le fichier base64 : tu obtiendras un contenu compress√©.\
Ensuite, d√©compresse ce fichier en m√©moire, sans l‚Äô√©crire sur le disque.\
Tu verras alors le mot de passe appara√Ætre en clair dans ton terminal.

Bonne chance, et n‚Äôoublie pas : Tu n‚Äôas pas besoin de forcer. Il suffit de d√©coder‚Ä¶ et de lib√©rer.\
Les donn√©es sont myst√®res, mais toi‚Ä¶ tu es lucide. Ouvre simplement les üëÄ
"""
    chemin_readme = os.path.join(dossier, "readme")
    with open(chemin_readme, "w") as f:
        f.write(contenu_readme)

    os.system(f"chown niveau{NIVEAU}:niveau{NIVEAU} {chemin_readme}")
    os.system(f"chmod 640 {chemin_readme}")

    # Restreindre le home
    CTF_lib.dossier_home_lecture(NIVEAU)

    # Lancer niveau suivant
    niveau24.main()

if __name__ == '__main__':
    main()
